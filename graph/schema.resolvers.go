package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"
	"errors"
	"team-helper-backend/graph/model"
)

// Task is the resolver for the task field.
func (r *queryResolver) Task(ctx context.Context, id string) (*model.Task, error) {
	tasks, err := GetAllTasks()
	if err != nil {
		return nil, errors.New("failed to retrieve tasks")
	}

	for _, task := range tasks {
		if task.ID == id {
			return task, nil
		}
	}

	return nil, errors.New("task not found for id " + id)
}

// Tasks is the resolver for the tasks field.
func (r *queryResolver) Tasks(ctx context.Context) ([]*model.Task, error) {
	return GetAllTasks()
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
